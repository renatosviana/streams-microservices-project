plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'groovy'
    id 'jacoco'
//    id 'com.commercehub.gradle.plugin.avro' version '0.22.0'
    id "com.bakdata.avro" version "1.3.1"
}

repositories {
    mavenCentral()
    gradlePluginPortal()
    maven {
        url 'https://packages.confluent.io/maven/'
    }
}

dependencies {

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.avro:avro'
//    implementation 'io.confluent:kafka-avro-serializer'
    implementation 'io.confluent:kafka-schema-registry-client'

    implementation "io.confluent:kafka-avro-serializer:${confluentVersion}"
    implementation "io.confluent:kafka-streams-avro-serde:${confluentVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

}



// Configure the Avro plugin
//avro {
//    createSetters = false
//    fieldVisibility = "PRIVATE"
//}

apply plugin: 'java'
//apply plugin: 'com.commercehub.gradle.plugin.avro'
sourceCompatibility = '17'
targetCompatibility = '17'


//bootRun {
//    doFirst {
//        def cp = org.gradle.util.CollectionUtils.join(File.pathSeparator, classpath.getFiles())
//        environment 'CLASSPATH', cp
//        classpath = classpath.filter { false }
//    }
//    jvmArgs = ["-javaagent:libs/aspectjweaver-1.9.9.1.jar", "-Djavax.net.ssl.trustStore=./src/main/resources/security/pnc-ca-bundle.jks", "-Djavax.net.ssl.trustStorePassword=changeit"]
//}

bootRun {
//    jvmArgs = ['-Dspring.profiles.active=dev']
    jvmArgs = ['-Djava.io.tmpdir=C:/temp']

    systemProperties = [
            'spring.config.name': 'application-dev'
    ]

    environment = [
            'ENV_VARIABLE': 'value'
    ]
}

test {
    useJUnitPlatform()
}

//avro {
////    sourceDir = file('src/main/avro')
//    outputDir = file("$buildDir/generated-main-avro-java")
//}


sourceSets.main.java.srcDirs += ["${buildDir}/generated-main-avro-java"]

//avro {
//    sourceDirectories.setFrom(files("src/main/resources/avro"))
//    outputDirectory.set(file("src/main/java"))
//}